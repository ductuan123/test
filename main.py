import requests
import os
from dotenv import load_dotenv
import logging

# Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file config.env
load_dotenv("config.env")

# Logging c·∫•u h√¨nh
logging.basicConfig(
    filename='motp_bot.log',
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)


def get_balance():
    """
    G·ªçi API GetBalance t·ª´ MOTP v√† tr·∫£ v·ªÅ k·∫øt qu·∫£ JSON.
    """
    token = os.getenv("MOTP_TOKEN")
    if not token:
        logging.error("Kh√¥ng t√¨m th·∫•y MOTP_TOKEN trong config.env")
        return {"error": True, "message": "Thi·∫øu token"}

    url = "https://gw.motp.vn/MOTP/GetBalance"
    params = {"token": token}

    try:
        response = requests.get(url, params=params, timeout=10)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        logging.error(f"L·ªói khi g·ªçi API MOTP: {e}")
        return {"error": True, "message": str(e)}
    except ValueError:
        return {"error": True, "message": "Kh√¥ng th·ªÉ ph√¢n t√≠ch JSON t·ª´ server"}


def send_to_telegram(message):
    """
    G·ª≠i m·ªôt tin nh·∫Øn ƒë·∫øn Telegram th√¥ng qua Bot API.
    """
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")

    if not bot_token or not chat_id:
        logging.error("Thi·∫øu TELEGRAM_BOT_TOKEN ho·∫∑c TELEGRAM_CHAT_ID trong config.env")
        return

    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    data = {
        "chat_id": chat_id,
        "text": message,
        "parse_mode": "Markdown"
    }

    try:
        response = requests.post(url, data=data)
        response.raise_for_status()
        logging.info("ƒê√£ g·ª≠i tin nh·∫Øn th√†nh c√¥ng ƒë·∫øn Telegram.")
    except requests.exceptions.RequestException as e:
        logging.error(f"L·ªói khi g·ª≠i tin nh·∫Øn Telegram: {e}")


if __name__ == "__main__":
    # Debug th·ª≠ xem c√≥ load ƒë√∫ng kh√¥ng
    print("MOTP_TOKEN =", os.getenv("MOTP_TOKEN"))
    print("TELEGRAM_BOT_TOKEN =", os.getenv("TELEGRAM_BOT_TOKEN"))
    print("TELEGRAM_CHAT_ID =", os.getenv("TELEGRAM_CHAT_ID"))

    result = get_balance()

    if "error" in result and result["error"]:
        send_to_telegram(f"‚ùå L·ªói khi l·∫•y s·ªë d∆∞ MOTP: {result['message']}")
    else:
        balance = result.get("Balance", "Kh√¥ng r√µ")
        send_to_telegram(f"üí∞ S·ªë d∆∞ t√†i kho·∫£n MOTP: `{balance}`")
